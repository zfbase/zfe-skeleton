<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Files', 'dbh');

/**
 * Base for Файлы
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id Идентификатор
 * @property string $model_name Модель записи, к которой привязан файл
 * @property integer $item_id ID записи, к которой привязан файл
 * @property integer $type Тип связи с записью, к которой привязан файл (код в схеме)
 * @property string $title Название файла
 * @property string $title_original Название исходного файла
 * @property integer $size Размер файла в байтах
 * @property string $hash Хэш сумма от файла
 * @property string $ext Расширение файла
 * @property string $path Путь до файла
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFiles extends AbstractRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('files');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'comment' => 'Идентификатор',
             'length' => '4',
             ));
        $this->hasColumn('model_name', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Модель записи, к которой привязан файл',
             'length' => '255',
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'comment' => 'ID записи, к которой привязан файл',
             'length' => '4',
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'comment' => 'Тип связи с записью, к которой привязан файл (код в схеме)',
             'length' => '1',
             ));
        $this->hasColumn('title', 'string', 511, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Название файла',
             'length' => '511',
             ));
        $this->hasColumn('title_original', 'string', 511, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Название исходного файла',
             'length' => '511',
             ));
        $this->hasColumn('size', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'comment' => 'Размер файла в байтах',
             'length' => '4',
             ));
        $this->hasColumn('hash', 'string', 45, array(
             'type' => 'string',
             'comment' => 'Хэш сумма от файла',
             'length' => '45',
             ));
        $this->hasColumn('ext', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Расширение файла',
             'length' => '7',
             ));
        $this->hasColumn('path', 'string', 511, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Путь до файла',
             'length' => '511',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $zfe_model_template_basezfefields0 = new ZFE_Model_Template_BaseZfeFields(array(
             'status' => false,
             ));
        $this->actAs($zfe_model_template_basezfefields0);
    }
}