<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('History', 'dbh');

/**
 * Base for История изменений
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property timestamp $datetime_action
 * @property string $table_name
 * @property integer $content_id
 * @property string $column_name
 * @property integer $content_version
 * @property string $content_old
 * @property string $content_new
 * @property integer $action_type
 * @property Editors $Editors
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHistory extends AbstractRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('history');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('datetime_action', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('table_name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '64',
             ));
        $this->hasColumn('content_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('column_name', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('content_version', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('content_old', 'string', 10000, array(
             'type' => 'string',
             'length' => '10000',
             ));
        $this->hasColumn('content_new', 'string', 10000, array(
             'type' => 'string',
             'length' => '10000',
             ));
        $this->hasColumn('action_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Editors', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'set null'));
    }
}